---
- name: Remove ACI EPGs and APs
  hosts: "aci"
  gather_facts: no
  vars:
    state: absent  # Set the state variable to "absent" or "present" as needed

  tasks:
    - name: Remove EPG
      aci_epg:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        epg: "{{ epg_name }}"
        state: "{{ state }}"
      register: epg_result

    - name: Display the result
      debug:
        var: epg_result

    - name: Get a list of EPGs in the Application Profile
      aci_epg:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
      register: epg_list
      ignore_errors: yes

    - name: Display the result
      debug:
        var: epg_list

    - name: Remove other EPGs in the Application Profile (if any)
      aci_epg:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        epg: "{{ item.name }}"
        state: "{{ state }}"
      with_items: "{{ epg_list.results }}"
      when: state == "absent" and item.name != "{{ epg_name }}"

    - name: Display the result
      debug:
        var: epg_result

    - name: Remove AP if no other EPGs left
      aci_ap:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        state: "{{ state }}"
      when: epg_list.results | selectattr('state', 'eq', 'absent') | list | length == 0

    - name: Display the result
      debug:
        var: ap_result

    - name: Remove BD
      aci_bd:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        bd: "{{ bd_name }}"
        state: "{{ state }}"
      register: bd_result

    - name: Display the result
      debug:
        var: bd_result
