---
- name: Create ACI TN AP EPG 
  hosts: "aci"
  gather_facts: no

  tasks:
    - name: Create Tenant
      aci_tenant:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        description: "{{ description }}"
        #					"nameAlias": "apps",

        state: "{{ action }}"
      register: result

    - name: Display the result
      debug:
        var: result
        
    - name: Create Application profile
      aci_ap:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        description: "{{ description }}"           # "apm-id:####,alias:AAAA"
#2.7.0		"annotation": "",
#2.7.0      "nameAlias":                            "alias applicatienaam",
        state: "{{ action }}"
      register: result
    - name: Display the result
      debug:
        var: result
        
        

    - name: Create BD
      aci_bd:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        bd: "{{ bd_name }}"                     #          "acc_#####_naam_xtr_yyy_dc1",
        description: "{{ description }}"        #        "descr": "apm-id:####,alias:AAAA",
        state: "{{ action }}"
#        annotation": "",
#        nameAlias": "XXXX",


        arp_flooding: "no"                      #        "arpFlood": "no",
#        bd_type": "ethernet"                   ###niet in ACI json   #        "type": "regular",???

        enable_multicast: false                 #        "mcastAllow": "no",
        endpoint_clear: false                   #        "epClear": "no",
        endpoint_move_detect: default           #        "epMoveDetectMode": "",
        enable_routing : true                   #        "unicastRoute": "yes",
                                                #        "hostBasedRouting": "no",
        ip_learning: true                       #        "ipLearning": "yes",
#2.7.0        ipv6_l3_unknown_multicast : "flood"     #        "v6unkMcastAct": "flood",
        l2_unknown_unicast : "proxy"            #        "unkMacUcastAct": "proxy",
        l3_unknown_multicast: "flood"           #        "unkMcastAct": "flood",
        limit_ip_learn : true                   #        "limitIpLearnToSubnets": "yes",
#        mac_addres                             #        "mac": "00:22:BD:F8:19:FF",## The APIC defaults to 00:22:BD:F8:19:FF when unset during creation.
        multi_dest: "bd-flood"                  #        "multiDstPktAct": "bd-flood",
        vrf: "tenand_id_dc>"                    #       child fvRsCtx
                                                        #"fvRsCtx": {
                                                        #  "attributes": {
                                                        #       "annotation": "",
                                                        #       "tnFvCtxName": "198_tcn"
                                                #        "ownerKey": "",
                                                #        "ownerTag": "",
                                                #        "intersiteBumTrafficAllow": "no",
                                                #        "intersiteL2Stretch": "no",
                                                #        "ipv6McastAllow": "no",
                                                #        "llAddr": "::",
                                                #        "vmac": "not-applicable"
							},

      register: result
    
    - name: Display the result
      debug:
        var: result

									"fvRsBDToOut": {
										"attributes": {
											"annotation": "",
											"tnL3extOutName": "l3out_198_tcn"
										}
									}
								},


    - name: Create BD Subnet
      aci_bd_subnet:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        bd: "{{ bd_name }}"
        gateway: "{{ gateway}}"
        mask: "{{ mask }}"
        description: "{{ description }}"
        state: "{{ action }}"
      register: result

									"fvSubnet": {
										"attributes": {
											"annotation": "",
											"ctrl": "",
											"descr": "apm-id:6091,alias:mitel",
											"ip": "10.79.64.193/29",
											"name": "exs_50175_ovoc_dtr_app_tcn",
											"nameAlias": "mitel",
											"preferred": "no",
											"scope": "public,shared",
											"virtual": "no"
										}

      
    - name: Display the result
      debug:
        var: result


    - name: Create EPG
      aci_epg:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        epg: "{{ epg_name }}"
        bd: "{{ bd_name }}"
        description: "{{ description }}"
        preferred_group: true
        state: "{{ action }}"
      register: result


									"fvAEPg": {
										"attributes": {
											"annotation": "",
											"descr": "apm-id:4281,alias:dictu-topdesk",
											"exceptionTag": "",
											"floodOnEncap": "disabled",
											"fwdCtrl": "",
											"hasMcastSource": "no",
											"isAttrBasedEPg": "no",
											"matchT": "AtleastOne",
											"name": "topdesk-ent_dtr_app_odcn",
											"nameAlias": "dictu-topdesk",
											"pcEnfPref": "unenforced",
											"prefGrMemb": "exclude",
											"prio": "unspecified",
											"shutdown": "no"
										},



    - name: Display the result
      debug:
        var: result

    - name: Add Domain to EPG
      aci_epg_to_domain:
        host: "{{ ansible_host }}"
        use_ssl: yes
        validate_certs: false
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        epg: "{{ epg_name }}"
        domain: vm1
        domain_type: vmm
        vm_provider : vmware
        resolution_immediacy: immediate
        deploy_immediacy : immediate
        state: "{{ action }}"
      register: result

												"fvRsDomAtt": {
													"attributes": {
														"annotation": "",
														"bindingType": "none",
														"classPref": "encap",
														"customEpgName": "",
														"delimiter": "",
														"encap": "unknown",
														"encapMode": "auto",
														"epgCos": "Cos0",
														"epgCosPref": "disabled",
														"instrImedcy": "lazy",
														"lagPolicyName": "",
														"netflowDir": "both",
														"netflowPref": "disabled",
														"numPorts": "0",
														"portAllocation": "none",
														"primaryEncap": "unknown",
														"primaryEncapInner": "unknown",
														"resImedcy": "pre-provision",
														"secondaryEncapInner": "unknown",
														"switchingMode": "native",
														"tDn": "uni/vmmp-VMware/dom-INFRA_TOOLING_STRETCHED01",
														"untagged": "no",
														"vnetOnly": "no"
													}


    - name: Display the result
      debug:
        var: result





						"l3extOut": {
							"attributes": {
								"annotation": "",
								"descr": "",
								"enforceRtctrl": "export",
								"name": "l3out_198_odcn",
								"nameAlias": "",
								"ownerKey": "",
								"ownerTag": "",
								"targetDscp": "unspecified"
							},
                            
                            
                            
                            						"fvCtx": {
							"attributes": {
								"annotation": "",
								"bdEnforcedEnable": "no",
								"descr": "",
								"ipDataPlaneLearning": "enabled",
								"knwMcastAct": "permit",
								"name": "198_odcn",
								"nameAlias": "apps",
								"ownerKey": "",
								"ownerTag": "",
								"pcEnfDir": "ingress",
								"pcEnfPref": "enforced"